# Each gesture line has 3 [or 4] arguments separated by whitespace:
#
# action motion [finger_count] command
#
# where action and motion is either:
#     swipe up
#     swipe down
#     swipe left
#     swipe right
#     swipe left_up
#     swipe left_down
#     swipe right_up
#     swipe right_down
#     pinch in
#     pinch out
#     pinch clockwise
#     pinch anticlockwise
#     hold on (hold gesture available since libinput 1.19)

gesture pinch clockwise echo pinch clockwise
gesture pinch anticlockwise echo pinch anticlockwise

# command is the remainder of the line and is any valid shell command +
# arguments. NOTE that the command is run directly and is not parsed by
# your shell. If you want shell parsing and substitutions etc then use a
# script as described in the CONFIGURATION section of the main README.

# Show all open windows in rofi
gesture swipe up 4 rofi -modi drun -show window -line-padding 4 -columns 2 -padding 50 -hide-scrollbar -terminal xfce4-terminal -show-icons -drun-icon-theme "Arc-X-D" -font "Droid Sans Regular 10"

# Go to next unoccupied workspace
gesture swipe down 4 bspc desktop -f next.!occupied

# Switch between tall layouts
gesture swipe left 3 bsp-layout set rtall
gesture swipe right 3 bsp-layout set tall

# Enable monocle mode
gesture swipe up 3 bspc desktop -l monocle
# Enable tiled mode
gesture swipe down 3 bspc desktop -l tiled

gesture swipe left 4 bspc desktop -f prev.occupied
gesture swipe right	4 bspc desktop -f next.occupied

# Open new browser tag ("hold on" available since libinput 1.19)
# gesture hold on 4 xdotool key control+t

gesture hold on 4 rofi -dmenu -window-title hello

gesture hold on 3 ~/.config/bspwm/scripts/window-management/swap-biggest-or-last.sh

###############################################################################
# This application normally determines your touchpad device
# automatically. Some users may have multiple touchpads but by default
# we use only the first one found. However, you can choose to specify
# the explicit device name to use. Run "libinput list-devices" to work
# out the name of your device (from the "Device:" field). Then add a
# device line specifying that name, e.g:
#
# device DLL0665:01 06CB:76AD Touchpad
#
# If the device name starts with a '/' then it is instead considered as
# the explicit device path although since device paths can change
# through reboots this is best to be a symlink. E.g. instead of specifying
# /dev/input/event12, you should use the corresponding full path link
# under /dev/input/by-path/ or /dev/input/by-id/.
#
# You can choose to use ALL touchpad devices by setting the device name
# to "all". E.g. Do this if you have multiple touchpads which you want
# to use in parallel. This reduces performance slightly so only set this
# if you have to.
#
# device all

###############################################################################
# You can set a minimum travel distance threshold before swipe gestures
# are actioned using the swipe_threshold configuration command.
# Specify this value in dots. The default is 0.
# E.g. set it to 100 dots with "swipe_threshold 100".
# swipe_threshold 0

###############################################################################
# You can set a timeout on gestures from start to end. The default is
# the value commented below. It can be any value in float secs >= 0.
# 0 = no timeout. E.g. set it to 2 secs with "timeout 2".
# timeout 1.5
