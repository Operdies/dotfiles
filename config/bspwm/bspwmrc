#!/bin/bash

pgrep -x sxhkd >/dev/null || sxhkd &
pgrep -x redshift >/dev/null || redshift &


if xrandr --listactivemonitors | grep -q "DP-4"; then
	export DISPLAY_NAME="DP-4"
  export MONITOR_SCRIPT="$HOME/.screenlayout/nvidia.sh"
else
	export DISPLAY_NAME="DisplayPort-1"
  export MONITOR_SCRIPT="$HOME/.screenlayout/amd.sh"
fi

# if xrandr --listactivemonitors | grep -q "DisplayPort-1"; then
# 	export DISPLAY_NAME="DisplayPort-1"
#   export MONITOR_SCRIPT="$HOME/.screenlayout/amd.sh"
# else
# 	export DISPLAY_NAME="DP-4"
#   export MONITOR_SCRIPT="$HOME/.screenlayout/nvidia.sh"
# fi

default-config() {
	bspc config split_ratio 0.50
	bspc config borderless_monocle true
	bspc config gapless_monocle false
	bspc config pointer_follows_focus true
	bspc config focus_follows_pointer true

	# prevent windows from stealing focus
	bspc config ignore_ewmh_focus true
	bspc config top_padding 40
	bspc config window_gap 12
	# Border
	bspc config border_width 2
	bspc config focused_border_color "#ac21c4"
	bspc config normal_border_color "#073642"
	bspc config active_border_color "#073642"
	bspc config single_monocle false

	# Some wine applications behave weird with borders.
	# Floating windows move diagonally off the screen unless tiled.
	~/.config/bspwm/scripts/window-management/no_border_wine &
}

ultrawide() {
	export RIGHT="$DISPLAY_NAME"
  $MONITOR_SCRIPT
	bspc monitor -d 1 2 3 4 5 6 7 8 9 0
	~/.config/polybar/launch.sh kill
	~/.config/polybar/launch.sh right
}

pip-mode() {
	export LEFT="$DISPLAY_NAME"
	# export LEFT="HDMI-0"
	export RIGHT="DP-4"

	~/.screenlayout/pip.sh
	# Set display from arandr saved script
	bspc monitor $RIGHT -d 1 2 3 4 5 6
	bspc monitor $LEFT -d 7 8 9 0
	# Explicitly set the monitor order to ensure DP-4 workspaces precede HDMI-0 workspaces
	bspc wm --reorder-monitors $RIGHT $LEFT

	default-config
}


# Configure the screen so the is a single 2560x1440 monitor in the middle, and two 1280x1440 monitors surrounding it
virtual-triple-pip-mode() {
  $MONITOR_SCRIPT
	export LEFT="vir1"
	export RIGHT="vir2"
	export MIDDLE="vir3"

	# Save the current focus so we can restore it after setting up monitors
	FOCUSED="$(bspc query -n focused -N)"

	# Ensure the main monitor is focused
	bspc monitor -f "$DISPLAY_NAME"
	# Configure the virtual monitors in xrandr if they are not already
	if ! xrandr --listactivemonitors | grep -q "vir"; then
		# Set the monitors with xrandr so other programs (polybar) know about the virtual displays as well
		xrandr --setmonitor "$LEFT" 1280/297x1440/340+0+0 none #"$DISPLAY_NAME"
		xrandr --setmonitor "$RIGHT" 1280/298x1440/340+3840+0 none
		xrandr --setmonitor "$MIDDLE" 2560/595x1440/340+1280+0 none

		# Force a resolution change to ensure the changes are propagated (not sure if this is needed?)
		xrandr --fb 5121x1440
		xrandr --fb 5120x1440
	fi

	# If the virtual monitors are not already configured, create them
	if ! bspc query -M --names | grep -q vir; then
		bspc wm -a "$LEFT" "1280x1440+0+0"
		bspc wm -a "$MIDDLE" "2560x1440+1280+0"
		bspc wm -a "$RIGHT" "1280x1440+3840+0"
	fi

	# Restore focus
	bspc node -f "$FOCUSED"

	# We don't want any top padding for the QHD monitor
	bspc config -m "$MIDDLE" top_padding 0

	bspc monitor $LEFT -d 1 2 3
	bspc monitor $MIDDLE -d 4 5 6
	bspc monitor $RIGHT -d 7 8 9 0

	# Explicitly reorder the monitors to ensure the workspace order is correct
	bspc wm --reorder-monitors $LEFT $MIDDLE $RIGHT

	# Open steam games workspace ^10
	GAMES=$(fd -d 1 "appmanifest" ~/.steam/steam/steamapps -x echo '{/.}' | sed 's/[^0-9]//g')
	for game in $GAMES; do
		bspc rule -a steam_app_"$game" desktop=^6 state=fullscreen
	done

	# apply the default config
	default-config

	# Bar
	~/.config/polybar/launch.sh kill
	~/.config/polybar/launch.sh left
	~/.config/polybar/launch.sh right
	~/.config/polybar/launch.sh vir3
}

# ultrawide
virtual-triple-pip-mode
# virtual-pip-mode
# pip-mode

# rules
bspc rule -a looking-glass-client desktop=^6 state=fullscreen
bspc rule -a Pavucontrol:pavucontrol state=floating
bspc rule -a 'Virt-manager:*' state=floating
bspc rule -a 'Arandr:*' state=floating
bspc rule -a 'Blueman-manager:*' state=floating
bspc rule -a "Thunar:*" state=floating
bspc rule -a 'Steam:*' desktop=^7
bspc rule -a 'discord:*' desktop=^7

bspc rule -a 'my_glfw_sample' state=floating

# Notifications
/usr/bin/dunst &
# Polkit
/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &
# Dex
dex -a -s /etc/xdg/autostart/:~/.config/autostart/

# the firewall-applet in /etc/xdg/autostart/firewall-applet.desktop
# does not check if it is already running and will launch new instances.
# This hack just kills them all and starts a new one
pkill firewall-applet
firewall-applet &
# Network Applet
nm-applet --indicator &

# Cursor
xsetroot -cursor_name left_ptr &

# Low battery notifier
# ~/.config/bspwm/scripts/low_bat_notifier.sh

# Set caps = escape
setxkbmap -option caps:escape
# pgrep -x xautolock > /dev/null || xautolock -time 30 -locker "systemctl suspend" -detectsleep &

# disable screen sleeping on inactivity
xset -dpms &
xset s off &

# picom
# -b: daemon mode
picom -b --config ~/.config/picom.conf

# set the usless key left of 'z' to backtick / tilde
xmodmap -e 'keycode 94 = grave asciitilde'

# Wallpaper
nitrogen --restore &

